import * as uuid from 'uuid';
export declare class TruUtil {
    static md5: any;
    static log: (x: any, y?: any) => void;
    static md5HashStr: (data: string) => string;
    static extension: (x: string) => string;
    static getRandomNumberBetween: (min: number, max: number) => number;
    static decode: (x: string) => string;
    static encode: (x: string) => string;
    static error: (x: any, y?: any) => void;
    static validEmail: (emails: string[]) => boolean;
    static hasData: (data: string) => boolean;
    static blank: (data: string) => boolean;
    static hasDataForAll: (...data: string[]) => boolean;
    static dataBlankForAll: (...data: string[]) => boolean;
    static dataBlankForAny: (...data: string[]) => boolean;
    static hasDataForAny: (...data: string[]) => boolean;
    static generateRandomString: () => any;
    static getJwt: (data: any) => string;
    static letifyJwt: (token: string, secret?: string) => {
        success: boolean;
        data?: any;
        message?: string;
    };
    static getHash: (data: string, key?: string) => string;
    static makeQueryPramVal: (val: string) => string | null;
    static generateSalt: () => string;
    static uuidV1: (<T extends ArrayLike<number>>(options: uuid.V1Options, buffer: T, offset?: number) => T) & ((options?: uuid.V1Options) => string);
    static uuidV4: (<T extends ArrayLike<number>>(options: uuid.V4Options, buffer: T, offset?: number) => T) & ((options?: uuid.V4Options) => string);
}
//# sourceMappingURL=utils.d.ts.map